<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd"
	default-lazy-init="true">

	<!-- alibaba数据源连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <property name="driverClassName" value="${jdbc_driverClassName}"/>
	    <property name="url" value="${jdbc_url}" />
	    <property name="username" value="${jdbc_username}" />
	    <property name="password" value="${jdbc_password}" />
	     
	    <property name="filters" value="stat" />
	 
	    <property name="maxActive" value="20" />
	    <property name="initialSize" value="1" />
	    <property name="maxWait" value="60000" />
	    <property name="minIdle" value="1" />
	 
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	 
	    <property name="validationQuery" value="SELECT 'x'" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	     
	    <property name="poolPreparedStatements" value="true" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
	
	 	<!-- 自动清除无用连接 -->
    	<property name="removeAbandoned" value="true" />
    	<!-- 清除无用连接的等待时间 -->
    	<property name="removeAbandonedTimeout" value="180" />

    	<!-- 连接属性 -->
    	<property name="connectionProperties" value="clientEncoding=UTF-8" />
	</bean>

  	<!-- mybatis文件配置，扫描所有mapper文件 -->
  	<!-- 在classpath后面的*必不可少，缺少型号的话后面的通配符不起作用 -->
  	<!-- **表示可以表示任意多级目录 -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:mybatis-config.xml"
          p:mapperLocations="classpath*:com/leebbs/**/*Mapper.xml"/>
       
   	 <!-- spring与mybatis整合配置，扫描所有dao -->
   	 <!-- p:markerInterface="com.njby.dao.BaseDao" -->
   	 <!-- p:basePackage="com.leebbs.admin.dao;com.leebbs.bbs.dao" -->
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
	        p:basePackage="com.leebbs.admin.dao"
	        p:markerInterface="com.leebbs.core.dao.BaseDao"
	        p:sqlSessionFactoryBeanName="sqlSessionFactory"/>

   	<!-- 对数据源进行事务管理 -->
	 <bean id="transactionManager"
	        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
	        p:dataSource-ref="dataSource"/> 
	
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>